#!/usr/bin/env python3
"""
This module provides a coroutine that uses async comprehensions to collect
random numbers generated by async_generator.
"""

import asyncio
from async_generator import async_generator
from typing import List

async def async_comprehension() -> List[float]:
    """
    Collect 10 random numbers using an async comprehension over async_generator.

    :return: A list of 10 random numbers.
    """
    return [number async for number in async_generator()]

# Example usage
if __name__ == "__main__":
    async def main():
        result = await async_comprehension()
        print(result)

    asyncio.run(main())

